var _CallumJHays$elm_sliders$Slider$prop2attrs = F2(
	function (prop, oldAttrs) {
		var newAttrs = function () {
			var _p0 = prop;
			switch (_p0.ctor) {
				case 'MinVal':
					return {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$min(
							_elm_lang$core$Basics$toString(_p0._0)),
						_1: {ctor: '[]'}
					};
				case 'MaxVal':
					return {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$max(
							_elm_lang$core$Basics$toString(_p0._0)),
						_1: {ctor: '[]'}
					};
				case 'Val':
					return {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$value(
							_elm_lang$core$Basics$toString(_p0._0)),
						_1: {ctor: '[]'}
					};
				case 'Step':
					return {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$step(
							_elm_lang$core$Basics$toString(_p0._0)),
						_1: {ctor: '[]'}
					};
				case 'OnChange':
					return _p0._0;
				default:
					return {
						ctor: '::',
						_0: _p0._0,
						_1: {ctor: '[]'}
					};
			}
		}();
		return A2(_elm_lang$core$Basics_ops['++'], oldAttrs, newAttrs);
	});
var _CallumJHays$elm_sliders$Slider$props2attrs = function (props) {
	return A3(
		_elm_lang$core$List$foldl,
		_CallumJHays$elm_sliders$Slider$prop2attrs,
		{ctor: '[]'},
		props);
};
var _CallumJHays$elm_sliders$Slider$props2view = function (props) {
	return A2(
		_elm_lang$html$Html$input,
		A2(
			_elm_lang$core$Basics_ops['++'],
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$type_('range'),
				_1: {ctor: '[]'}
			},
			_CallumJHays$elm_sliders$Slider$props2attrs(props)),
		{ctor: '[]'});
};
var _CallumJHays$elm_sliders$Slider$update = F2(
	function (msg, model) {
		var _p1 = msg;
		return A2(
			_elm_lang$core$Platform_Cmd_ops['!'],
			_elm_lang$core$Native_Utils.update(
				model,
				{val: _p1._0}),
			{ctor: '[]'});
	});
var _CallumJHays$elm_sliders$Slider$default = {val: 50, minVal: 0, maxVal: 100, step: 1};
var _CallumJHays$elm_sliders$Slider$init = A2(
	_elm_lang$core$Platform_Cmd_ops['!'],
	_CallumJHays$elm_sliders$Slider$default,
	{ctor: '[]'});
var _CallumJHays$elm_sliders$Slider$Model = F4(
	function (a, b, c, d) {
		return {val: a, minVal: b, maxVal: c, step: d};
	});
var _CallumJHays$elm_sliders$Slider$UpdateVal = function (a) {
	return {ctor: 'UpdateVal', _0: a};
};
var _CallumJHays$elm_sliders$Slider$Attr = function (a) {
	return {ctor: 'Attr', _0: a};
};
var _CallumJHays$elm_sliders$Slider$OnChange = function (a) {
	return {ctor: 'OnChange', _0: a};
};
var _CallumJHays$elm_sliders$Slider$onChange = function (msgType) {
	return _CallumJHays$elm_sliders$Slider$OnChange(
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onInput(
				function (_p2) {
					return msgType(
						_CallumJHays$elm_unwrap$Unwrap$result(
							_elm_lang$core$String$toFloat(_p2)));
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html_Events$on,
					'change',
					A2(_elm_lang$core$Json_Decode$map, msgType, _elm_lang$core$Json_Decode$float)),
				_1: {ctor: '[]'}
			}
		});
};
var _CallumJHays$elm_sliders$Slider$Step = function (a) {
	return {ctor: 'Step', _0: a};
};
var _CallumJHays$elm_sliders$Slider$Val = function (a) {
	return {ctor: 'Val', _0: a};
};
var _CallumJHays$elm_sliders$Slider$MaxVal = function (a) {
	return {ctor: 'MaxVal', _0: a};
};
var _CallumJHays$elm_sliders$Slider$MinVal = function (a) {
	return {ctor: 'MinVal', _0: a};
};
var _CallumJHays$elm_sliders$Slider$model2props = function (model) {
	return {
		ctor: '::',
		_0: _CallumJHays$elm_sliders$Slider$MinVal(model.minVal),
		_1: {
			ctor: '::',
			_0: _CallumJHays$elm_sliders$Slider$MaxVal(model.maxVal),
			_1: {
				ctor: '::',
				_0: _CallumJHays$elm_sliders$Slider$Val(model.val),
				_1: {
					ctor: '::',
					_0: _CallumJHays$elm_sliders$Slider$Step(model.step),
					_1: {
						ctor: '::',
						_0: _CallumJHays$elm_sliders$Slider$onChange(_CallumJHays$elm_sliders$Slider$UpdateVal),
						_1: {ctor: '[]'}
					}
				}
			}
		}
	};
};
var _CallumJHays$elm_sliders$Slider$view = function (model) {
	return _CallumJHays$elm_sliders$Slider$props2view(
		_CallumJHays$elm_sliders$Slider$model2props(model));
};
